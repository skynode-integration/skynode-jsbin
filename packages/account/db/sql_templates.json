{
    "getUser": "SELECT * FROM `ownership2` WHERE `name`=? LIMIT 1",
    "getUserByGithubId": "SELECT * FROM `ownership2` WHERE `github_id`=? LIMIT 1",
    "getUserByApiKey": "SELECT * FROM `ownership2` WHERE `api_key`=? LIMIT 1",
    "getByEmail": "SELECT * FROM `ownership2` WHERE `email`=? LIMIT 1",
    "setUser": "INSERT INTO `ownership` (`name`, `key`, `email`, `last_login`, `created`, `updated`, `github_token`, `github_id`, `flagged`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "touchLogin": "UPDATE `ownership` SET `last_login`=? WHERE `name`=?",
    "updateUserKey": "UPDATE ownership SET `key`=?, `updated`=? WHERE `name`=?",
    "updateUserSettings": "UPDATE ownership SET `settings`=? WHERE `name`=?",
    "upgradeUserKey": "UPDATE ownership SET `key`=?, `created`=?, `updated`=? WHERE `name`=?",
    "updateUserEmail": "UPDATE ownership SET `email`=?, `updated`=? WHERE `name`=?",
    "updateUserAccessToken": "UPDATE ownership SET `access_token`=?, `updated`=? WHERE `name`=?",
    "updateUserGithubData": "UPDATE ownership SET `github_token`=?, `updated`=? WHERE `name`=?",
    "updateUserDropboxData": "UPDATE ownership SET `dropbox_token`=?, `updated`=? WHERE `name`=?",
    "getUserByEmail": "SELECT * FROM `ownership` WHERE `email`=? LIMIT 1",
    "getUserForForgotToken": "SELECT `ownership`.*, expires FROM `ownership` INNER JOIN `forgot_tokens` ON `name` = `owner_name` WHERE `token` = ? AND `forgot_tokens`.`expires` >= ?",
    "setForgotToken": "INSERT INTO `forgot_tokens` (`owner_name`, `token`, `expires`, `created`) VALUES (?, ?, ?, ?)",
    "deleteExpiredForgotToken": "DELETE FROM `forgot_tokens` WHERE `expires` <= ? OR `token`=? OR `owner_name`=?",
    "updateOwnershipData": "UPDATE `ownership` SET `:field`=? WHERE `name`=?",
    "setCustomer": "REPLACE INTO `customers` (`stripe_id`, `user_id`, `name`, `plan`) VALUES (?, ?, ?, ?)",
    "setCustomerActive": "UPDATE `customers` SET `active`=? WHERE `name`=?",
    "getCustomerByStripeId": "SELECT * FROM `customers` WHERE `stripe_id`=? LIMIT 1",
    "getCustomerByUser": "SELECT * FROM `customers` WHERE `name`=? LIMIT 1",
    "setProAccount": "UPDATE ownership SET `pro`=?, `updated`=? WHERE `name`=?",
    "saveBookmark": "INSERT INTO owner_bookmarks (`name`, `url`, `revision`, `type`, `created`) VALUES (?,?,?,?,?)",
    "getBookmark": "SELECT * FROM owner_bookmarks WHERE `name`=? AND `type`=? ORDER BY `created` DESC",
    "deleteUser": "DELETE FROM ownership, owners, sandbox USING ownership INNER JOIN owners INNER JOIN sandbox WHERE ownership.name = ? AND ownership.name = owners.name AND owners.url = sandbox.url AND owners.revision = sandbox.revision",
    "ownershipColumns": [
        "// protected name",
        "key",
        "email",
        "api_key",
        "github_token",
        "github_id",
        "last_login",
        "created",
        "updated",
        "pro",
        "settings",
        "embed",
        "// protected id",
        "access_token",
        "dropbox_token",
        "domain",
        "verified",
        "dropbox_id",
        "beta",
        "flagged",
        "last_seen"
    ],
    "getUserPassportData": "SELECT * FROM `passports` WHERE `owner_name`=? AND `auth_provider`=? LIMIT 1",
    "insertUserPassportData": "INSERT INTO passports(`owner_name`,`auth_provider`,`auth_id`,`auth_token`,`created`, `updated`) VALUES(?,?,?,?,?,?)",
    "updateUserPassportData": "UPDATE passports SET `auth_id` = ?, `auth_token`=?, `updated`=? WHERE `owner_name`=? AND `auth_provider`=?"
}